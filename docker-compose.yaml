version: "3.4"
services:
  node-consumer:
    image: node-consumer
    container_name: node-consumer
    build:
      context: .\consumer
      dockerfile: Dockerfile
    ports: 
      - "5000:5000"
    networks: 
      - webnet
    depends_on: 
      - rabbitmq
      
  node-server:
    image: node-server
    container_name: node-server
    build:
      context: .\node-server
      dockerfile: Dockerfile
    env_file: 
      - .env
    ports:
      - "3000:3000"
    networks:
      - webnet
    depends_on: 
      - mongo
      - elasticsearch
  
  redis:
    image: redis
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - webnet

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - webnet

  elasticsearch:
    image: elasticsearch
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    networks: 
      - webnet
    environment: 
      - discovery.type=single-node
    volumes:
      - esData:/usr/share/elasticsearch/data

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - webnet
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:
    driver: local
  esData:
    driver: local

networks: 
  webnet:
    driver: bridge

